name: "CI Web"
on:
  pull_request:
    branches:
      - develop

jobs:
  terraform:
    name: Terraform Validate - Plan
    runs-on: ubuntu-latest
    env:
      base_path: "terraform/time-tracker/time-tracker-resources"
      ARM_CLIENT_ID: ${{ secrets.APP_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.PASSWORD }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION }}
      ARM_TENANT_ID: ${{ secrets.TENANT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{env.base_path}}

      - name: Terraform Validate
        run: terraform validate  -no-color
        working-directory: ${{env.base_path}}

      - name: Terraform Plan
        run:  terraform plan -no-color
        working-directory: ${{env.base_path}}
        continue-on-error: true

      - name: Write State in Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

